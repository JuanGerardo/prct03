Rspuestas:
21- las dobles comillas interpretan, las comillas simples no.
22- %q{} funciona igual que las comillas simples
23- %Q{}funciona igual que las comilals dobles
24- --4--  y --2--
25- --#{a}-- y --#{b}--
26- .he
.o
.hello
27- hello world
28- "..."
29- "2 2 2 "
30- Coloca las cadenas en un vector.
31- "                 "
32- Coloca las cadenas interpretandolas
33- [nil,nil,nil]
34- [0,0,0]
35- b contiene [[1,2],[3,4]]
36- c contiene [0,2,4]
37- ["b"]
["d","e"]
["a","b","c"]
["a"]
["d","e"]
38-["AB","c","d","e"]
["AB","c","C","D","E"]
[1,2,3,"AB","c","C","D","E"]
[3,"AB","c","C","D","E"]
39-[1,2,3]
[1,2,3,4,5]
[1,2,3,4,5,[6,7,8]]
error
40-["a","b","c","b","a"]
["a","a"]
41-[0,0,0,0,0,0,0,0]
42-[1]
[1,2,3]
[1,2,3,[4,5,6]]
[1,2,3,[4,5,6],7,8]
43-[1,2,3,4,5]
[5,4,3,2,1]
[2,3,4]
[4,3,2]
44-[1,2,3,4,5,6,7,8,9,10]
[1,2,3,4,5,6,7,8,9]
false
true
undefined method
45-true
true
true
46-TrueClass
FalseClass
hello
nada
warning hello
47-Symbol
false
true
symbol
false
false
48-Rub
RubJava
49-"3 rubies"
50-[4,5]
5
[1,2,3]
51-{1 :=> 1, :b =>2}
[:a, :b]
[1, 2]
{:a =>1, b=>2, c=>3}
{:a =>1, b=>2, c=>3}
{:b =>2, :c=>3}
{:a=>1}
{:a=>1}
52- yeld 5 es un bloque que puede ser llamado por su normbre, 5, lo mismo con yield 4
53-
54- ["hello", "world", "hello", "LPP"]
55- crea un hash y lo separa por keys
